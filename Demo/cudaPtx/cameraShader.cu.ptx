//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19805474
// Cuda compilation tools, release 7.5, V7.5.16
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	_Z14pinhole_camerav
.global .align 8 .b8 eye[12];
.global .align 4 .b8 u[12];
.global .align 4 .b8 v[12];
.global .align 4 .b8 w[12];
.global .align 8 .b8 top_Object[4];
.global .align 8 .b8 launch_index[8];
.global .align 4 .b8 ray[36];
.global .align 16 .b8 prd_radiance[64];
.global .align 4 .u32 max_depth;
.global .align 1 .b8 output_buffer[1];
.global .texref envmap;
.global .align 4 .b8 bgColor[12];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZTVSt14error_category[72];
.global .align 8 .b8 _ZTVSt23_Generic_error_category[72];
.global .align 8 .b8 _ZTVSt24_Iostream_error_category[72];
.global .align 8 .b8 _ZTVSt22_System_error_category[72];
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1uE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1vE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1wE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_ObjectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9max_depthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7bgColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1uE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1vE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1wE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_ObjectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[10] = {83, 104, 97, 100, 101, 114, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9max_depthE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7bgColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1uE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1vE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1wE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_ObjectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9max_depthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7bgColorE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1uE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1vE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1wE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_ObjectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9max_depthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7bgColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1uE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1vE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1wE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_ObjectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9max_depthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7bgColorE[1];

.visible .entry _Z14pinhole_camerav(

)
{
	.local .align 16 .b8 	__local_depot0[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<51>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<16>;


	mov.u64 	%rd15, __local_depot0;
	cvta.local.u64 	%SP, %rd15;
	mov.u64 	%rd13, output_buffer;
	cvta.global.u64 	%rd5, %rd13;
	mov.u32 	%r6, 2;
	mov.u32 	%r7, 16;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r6, %r7);
	// inline asm
	ld.global.v2.u32 	{%r8, %r9}, [launch_index];
	cvt.rn.f32.u32	%f9, %r8;
	cvt.rn.f32.u32	%f10, %r9;
	cvt.rn.f32.u64	%f11, %rd1;
	cvt.rn.f32.u64	%f12, %rd2;
	div.rn.f32 	%f13, %f9, %f11;
	div.rn.f32 	%f14, %f10, %f12;
	fma.rn.f32 	%f15, %f13, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f16, %f14, 0f40000000, 0fBF800000;
	ld.global.v2.f32 	{%f17, %f18}, [eye];
	ld.global.f32 	%f3, [eye+8];
	ld.global.f32 	%f19, [u];
	ld.global.f32 	%f20, [u+4];
	ld.global.f32 	%f21, [u+8];
	ld.global.f32 	%f22, [v];
	mul.f32 	%f23, %f16, %f22;
	ld.global.f32 	%f24, [v+4];
	mul.f32 	%f25, %f16, %f24;
	ld.global.f32 	%f26, [v+8];
	mul.f32 	%f27, %f16, %f26;
	fma.rn.f32 	%f28, %f15, %f19, %f23;
	fma.rn.f32 	%f29, %f15, %f20, %f25;
	fma.rn.f32 	%f30, %f15, %f21, %f27;
	ld.global.f32 	%f31, [w];
	add.f32 	%f32, %f28, %f31;
	ld.global.f32 	%f33, [w+4];
	add.f32 	%f34, %f29, %f33;
	ld.global.f32 	%f35, [w+8];
	add.f32 	%f36, %f30, %f35;
	mul.f32 	%f37, %f34, %f34;
	fma.rn.f32 	%f38, %f32, %f32, %f37;
	fma.rn.f32 	%f39, %f36, %f36, %f38;
	sqrt.rn.f32 	%f40, %f39;
	rcp.rn.f32 	%f41, %f40;
	mul.f32 	%f4, %f32, %f41;
	mul.f32 	%f5, %f34, %f41;
	mul.f32 	%f6, %f36, %f41;
	mov.f32 	%f42, 0f00000000;
	add.u64 	%rd6, %SP, 0;
	cvta.to.local.u64 	%rd14, %rd6;
	st.local.v4.f32 	[%rd14+16], {%f42, %f42, %f42, %f42};
	mov.u32 	%r4, 0;
	st.local.u32 	[%rd14], %r4;
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd14+56], %rs1;
	ld.global.u32 	%r3, [top_Object];
	mov.f32 	%f7, 0f38D1B717;
	mov.f32 	%f8, 0f6C4ECB8F;
	mov.u32 	%r5, 64;
	// inline asm
	call _rt_trace_64, (%r3, %f17, %f18, %f3, %f4, %f5, %f6, %r4, %f7, %f8, %rd6, %r5);
	// inline asm
	ld.global.u32 	%rd9, [launch_index];
	ld.global.u32 	%rd10, [launch_index+4];
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd5, %r6, %r7, %rd9, %rd10, %rd12, %rd12);
	// inline asm
	ld.local.v4.f32 	{%f43, %f44, %f45, %f46}, [%rd14+16];
	st.v4.f32 	[%rd7], {%f43, %f44, %f45, %f46};
	ret;
}

	// .globl	_Z10backGroundv
.visible .entry _Z10backGroundv(

)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<71>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<6>;


	mov.u64 	%rd1, ray;
	add.s64 	%rd2, %rd1, 12;
	ldu.global.f32 	%f1, [%rd2];
	add.s64 	%rd3, %rd1, 16;
	ldu.global.f32 	%f9, [%rd3];
	abs.f32 	%f10, %f9;
	mov.f32 	%f11, 0f3F800000;
	sub.f32 	%f12, %f11, %f10;
	mul.f32 	%f13, %f12, 0f3F000000;
	sqrt.rn.f32 	%f14, %f13;
	setp.gt.f32	%p1, %f10, 0f3F11EB85;
	selp.f32	%f15, %f14, %f10, %p1;
	mul.f32 	%f16, %f15, %f15;
	mov.f32 	%f17, 0f3C94D2E9;
	mov.f32 	%f18, 0f3D53F941;
	fma.rn.f32 	%f19, %f18, %f16, %f17;
	mov.f32 	%f20, 0f3D3F841F;
	fma.rn.f32 	%f21, %f19, %f16, %f20;
	mov.f32 	%f22, 0f3D994929;
	fma.rn.f32 	%f23, %f21, %f16, %f22;
	mov.f32 	%f24, 0f3E2AAB94;
	fma.rn.f32 	%f25, %f23, %f16, %f24;
	mul.f32 	%f26, %f16, %f25;
	fma.rn.f32 	%f27, %f26, %f15, %f15;
	add.f32 	%f28, %f27, %f27;
	mov.f32 	%f29, 0f3FC90FDB;
	sub.f32 	%f30, %f29, %f27;
	selp.f32	%f31, %f28, %f30, %p1;
	setp.lt.f32	%p2, %f9, 0f00000000;
	mov.f32 	%f32, 0f40490FDB;
	sub.f32 	%f33, %f32, %f31;
	selp.f32	%f2, %f33, %f31, %p2;
	add.s64 	%rd4, %rd1, 20;
	ldu.global.f32 	%f34, [%rd4];
	abs.f32 	%f3, %f34;
	abs.f32 	%f4, %f1;
	setp.eq.f32	%p3, %f3, 0f00000000;
	setp.eq.f32	%p4, %f4, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	mov.b32 	 %r1, %f34;
	mov.b32 	 %r3, %f1;
	and.b32  	%r2, %r3, -2147483648;
	@%p5 bra 	BB1_4;
	bra.uni 	BB1_1;

BB1_4:
	shr.s32 	%r10, %r1, 31;
	and.b32  	%r11, %r10, 1078530011;
	or.b32  	%r12, %r11, %r2;
	mov.b32 	 %f70, %r12;
	bra.uni 	BB1_5;

BB1_1:
	setp.eq.f32	%p6, %f3, 0f7F800000;
	setp.eq.f32	%p7, %f4, 0f7F800000;
	and.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB1_3;
	bra.uni 	BB1_2;

BB1_3:
	shr.s32 	%r6, %r1, 31;
	and.b32  	%r7, %r6, 13483017;
	add.s32 	%r8, %r7, 1061752795;
	or.b32  	%r9, %r8, %r2;
	mov.b32 	 %f70, %r9;
	bra.uni 	BB1_5;

BB1_2:
	max.f32 	%f35, %f4, %f3;
	min.f32 	%f36, %f4, %f3;
	div.rn.f32 	%f37, %f36, %f35;
	mul.rn.f32 	%f38, %f37, %f37;
	mov.f32 	%f39, 0fC0B59883;
	mov.f32 	%f40, 0fBF52C7EA;
	fma.rn.f32 	%f41, %f38, %f40, %f39;
	mov.f32 	%f42, 0fC0D21907;
	fma.rn.f32 	%f43, %f41, %f38, %f42;
	mul.f32 	%f44, %f38, %f43;
	mul.f32 	%f45, %f37, %f44;
	add.f32 	%f46, %f38, 0f41355DC0;
	mov.f32 	%f47, 0f41E6BD60;
	fma.rn.f32 	%f48, %f46, %f38, %f47;
	mov.f32 	%f49, 0f419D92C8;
	fma.rn.f32 	%f50, %f48, %f38, %f49;
	rcp.rn.f32 	%f51, %f50;
	fma.rn.f32 	%f52, %f45, %f51, %f37;
	sub.f32 	%f54, %f29, %f52;
	setp.gt.f32	%p9, %f4, %f3;
	selp.f32	%f55, %f54, %f52, %p9;
	sub.f32 	%f57, %f32, %f55;
	setp.lt.s32	%p10, %r1, 0;
	selp.f32	%f58, %f57, %f55, %p10;
	mov.b32 	 %r4, %f58;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	 %f59, %r5;
	add.f32 	%f60, %f3, %f4;
	setp.gtu.f32	%p11, %f60, 0f7F800000;
	selp.f32	%f70, %f60, %f59, %p11;

BB1_5:
	add.f32 	%f61, %f70, 0f40C90FDB;
	setp.gt.f32	%p12, %f1, 0f00000000;
	selp.f32	%f62, %f70, %f61, %p12;
	div.rn.f32 	%f63, %f62, 0f40490FDB;
	mul.f32 	%f64, %f63, 0f3F000000;
	div.rn.f32 	%f65, %f2, 0f40490FDB;
	tex.2d.v4.f32.f32	{%f66, %f67, %f68, %f69}, [envmap, {%f64, %f65}];
	st.global.v4.f32 	[prd_radiance+16], {%f66, %f67, %f68, %f69};
	mov.u16 	%rs1, 1;
	st.global.u8 	[prd_radiance+56], %rs1;
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.reg .f32 	%f<3>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<8>;


	ld.global.u32 	%rd3, [launch_index];
	ld.global.u32 	%rd4, [launch_index+4];
	mov.u64 	%rd7, output_buffer;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r1, 2;
	mov.u32 	%r2, 16;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd4, %rd6, %rd6);
	// inline asm
	mov.f32 	%f1, 0f00000000;
	mov.f32 	%f2, 0f3F800000;
	st.v4.f32 	[%rd1], {%f2, %f2, %f1, %f2};
	ret;
}


