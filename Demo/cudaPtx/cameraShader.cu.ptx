//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19805474
// Cuda compilation tools, release 7.5, V7.5.16
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	_Z14pinhole_camerav
.global .align 8 .b8 eye[12];
.global .align 4 .b8 u[12];
.global .align 4 .b8 v[12];
.global .align 4 .b8 w[12];
.global .align 8 .b8 top_Object[4];
.global .align 8 .b8 launch_index[8];
.global .align 4 .b8 ray[36];
.global .align 16 .b8 prd_radiance[112];
.global .align 4 .u32 max_depth;
.global .align 1 .b8 output_buffer[1];
.global .align 4 .u32 frame_number;
.global .align 4 .f32 Y_log_av;
.global .align 4 .f32 Y_max;
.global .align 1 .b8 hdr_buffer[1];
.global .texref envmap;
.global .align 4 .b8 bgColor[12];
.global .align 4 .f32 intensity;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZTVSt14error_category[72];
.global .align 8 .b8 _ZTVSt23_Generic_error_category[72];
.global .align 8 .b8 _ZTVSt24_Iostream_error_category[72];
.global .align 8 .b8 _ZTVSt22_System_error_category[72];
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1uE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1vE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1wE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_ObjectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 112, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9max_depthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12frame_numberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8Y_log_avE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5Y_maxE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7bgColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9intensityE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1uE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1vE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1wE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_ObjectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[10] = {83, 104, 97, 100, 101, 114, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9max_depthE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12frame_numberE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8Y_log_avE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5Y_maxE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename7bgColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9intensityE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1uE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1vE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1wE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_ObjectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9max_depthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12frame_numberE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8Y_log_avE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5Y_maxE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7bgColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9intensityE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1uE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1vE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1wE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_ObjectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9max_depthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12frame_numberE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8Y_log_avE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5Y_maxE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7bgColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9intensityE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1uE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1vE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1wE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_ObjectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9max_depthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12frame_numberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8Y_log_avE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5Y_maxE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7bgColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9intensityE[1];

.visible .entry _Z14pinhole_camerav(

)
{
	.local .align 16 .b8 	__local_depot0[112];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<46>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<16>;


	mov.u64 	%rd15, __local_depot0;
	cvta.local.u64 	%SP, %rd15;
	mov.u64 	%rd13, output_buffer;
	cvta.global.u64 	%rd5, %rd13;
	mov.u32 	%r6, 2;
	mov.u32 	%r7, 16;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r6, %r7);
	// inline asm
	ld.global.v2.u32 	{%r8, %r9}, [launch_index];
	cvt.rn.f32.u32	%f9, %r8;
	cvt.rn.f32.u32	%f10, %r9;
	cvt.rn.f32.u64	%f11, %rd1;
	cvt.rn.f32.u64	%f12, %rd2;
	div.rn.f32 	%f13, %f9, %f11;
	div.rn.f32 	%f14, %f10, %f12;
	fma.rn.f32 	%f15, %f13, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f16, %f14, 0f40000000, 0fBF800000;
	ld.global.v2.f32 	{%f17, %f18}, [eye];
	ld.global.f32 	%f3, [eye+8];
	ld.global.f32 	%f19, [u];
	ld.global.f32 	%f20, [u+4];
	ld.global.f32 	%f21, [u+8];
	ld.global.f32 	%f22, [v];
	mul.f32 	%f23, %f16, %f22;
	ld.global.f32 	%f24, [v+4];
	mul.f32 	%f25, %f16, %f24;
	ld.global.f32 	%f26, [v+8];
	mul.f32 	%f27, %f16, %f26;
	fma.rn.f32 	%f28, %f15, %f19, %f23;
	fma.rn.f32 	%f29, %f15, %f20, %f25;
	fma.rn.f32 	%f30, %f15, %f21, %f27;
	ld.global.f32 	%f31, [w];
	add.f32 	%f32, %f28, %f31;
	ld.global.f32 	%f33, [w+4];
	add.f32 	%f34, %f29, %f33;
	ld.global.f32 	%f35, [w+8];
	add.f32 	%f36, %f30, %f35;
	mul.f32 	%f37, %f34, %f34;
	fma.rn.f32 	%f38, %f32, %f32, %f37;
	fma.rn.f32 	%f39, %f36, %f36, %f38;
	sqrt.rn.f32 	%f40, %f39;
	rcp.rn.f32 	%f41, %f40;
	mul.f32 	%f4, %f32, %f41;
	mul.f32 	%f5, %f34, %f41;
	mul.f32 	%f6, %f36, %f41;
	add.u64 	%rd6, %SP, 0;
	cvta.to.local.u64 	%rd14, %rd6;
	mov.u32 	%r4, 0;
	st.local.u32 	[%rd14+104], %r4;
	mov.f32 	%f42, 0f00000000;
	st.local.v2.f32 	[%rd14+96], {%f42, %f42};
	st.local.u32 	[%rd14], %r4;
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd14+80], %rs1;
	ld.global.u32 	%r3, [top_Object];
	mov.f32 	%f7, 0f38D1B717;
	mov.f32 	%f8, 0f6C4ECB8F;
	mov.u32 	%r5, 112;
	// inline asm
	call _rt_trace_64, (%r3, %f17, %f18, %f3, %f4, %f5, %f6, %r4, %f7, %f8, %rd6, %r5);
	// inline asm
	ld.global.u32 	%rd9, [launch_index];
	ld.global.u32 	%rd10, [launch_index+4];
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd5, %r6, %r7, %rd9, %rd10, %rd12, %rd12);
	// inline asm
	ld.local.f32 	%f43, [%rd14+96];
	ld.local.f32 	%f44, [%rd14+100];
	ld.local.f32 	%f45, [%rd14+104];
	mov.u32 	%r12, 1065353216;
	st.u32 	[%rd7+12], %r12;
	st.f32 	[%rd7+8], %f45;
	st.f32 	[%rd7+4], %f44;
	st.f32 	[%rd7], %f43;
	ret;
}

	// .globl	_Z21jitter_pinhole_camerav
.visible .entry _Z21jitter_pinhole_camerav(

)
{
	.local .align 16 .b8 	__local_depot1[112];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<4>;
	.reg .f32 	%f<190>;
	.reg .b32 	%r<299>;
	.reg .b64 	%rd<68>;


	mov.u64 	%rd67, __local_depot1;
	cvta.local.u64 	%SP, %rd67;
	mov.u64 	%rd6, output_buffer;
	cvta.global.u64 	%rd5, %rd6;
	mov.u32 	%r10, 2;
	mov.u32 	%r11, 16;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r10, %r11);
	// inline asm
	cvt.rn.f32.u64	%f55, %rd1;
	cvt.rn.f32.u64	%f56, %rd2;
	rcp.rn.f32 	%f57, %f55;
	rcp.rn.f32 	%f58, %f56;
	add.f32 	%f59, %f57, %f57;
	add.f32 	%f60, %f58, %f58;
	ld.global.v2.u32 	{%r13, %r14}, [launch_index];
	cvt.rn.f32.u32	%f61, %r13;
	cvt.rn.f32.u32	%f62, %r14;
	fma.rn.f32 	%f1, %f59, %f61, 0fBF800000;
	fma.rn.f32 	%f2, %f60, %f62, 0fBF800000;
	mul.f32 	%f3, %f59, 0f3F000000;
	mul.f32 	%f4, %f60, 0f3F000000;
	cvt.u64.u32	%rd7, %r14;
	mul.lo.s64 	%rd8, %rd7, %rd1;
	cvt.u64.u32	%rd9, %r13;
	add.s64 	%rd10, %rd8, %rd9;
	cvt.u32.u64	%r17, %rd10;
	ld.global.u32 	%r18, [frame_number];
	shl.b32 	%r19, %r18, 4;
	add.s32 	%r20, %r19, -1556008596;
	add.s32 	%r21, %r18, -1640531527;
	xor.b32  	%r22, %r20, %r21;
	shr.u32 	%r23, %r18, 5;
	add.s32 	%r24, %r23, -939442524;
	xor.b32  	%r25, %r22, %r24;
	add.s32 	%r26, %r25, %r17;
	shl.b32 	%r27, %r26, 4;
	add.s32 	%r28, %r27, -1383041155;
	add.s32 	%r29, %r26, -1640531527;
	xor.b32  	%r30, %r28, %r29;
	shr.u32 	%r31, %r26, 5;
	add.s32 	%r32, %r31, 2123724318;
	xor.b32  	%r33, %r30, %r32;
	add.s32 	%r34, %r33, %r18;
	shl.b32 	%r35, %r34, 4;
	add.s32 	%r36, %r35, -1556008596;
	add.s32 	%r37, %r34, 1013904242;
	xor.b32  	%r38, %r36, %r37;
	shr.u32 	%r39, %r34, 5;
	add.s32 	%r40, %r39, -939442524;
	xor.b32  	%r41, %r38, %r40;
	add.s32 	%r42, %r41, %r26;
	shl.b32 	%r43, %r42, 4;
	add.s32 	%r44, %r43, -1383041155;
	add.s32 	%r45, %r42, 1013904242;
	xor.b32  	%r46, %r44, %r45;
	shr.u32 	%r47, %r42, 5;
	add.s32 	%r48, %r47, 2123724318;
	xor.b32  	%r49, %r46, %r48;
	add.s32 	%r50, %r49, %r34;
	shl.b32 	%r51, %r50, 4;
	add.s32 	%r52, %r51, -1556008596;
	add.s32 	%r53, %r50, -626627285;
	xor.b32  	%r54, %r52, %r53;
	shr.u32 	%r55, %r50, 5;
	add.s32 	%r56, %r55, -939442524;
	xor.b32  	%r57, %r54, %r56;
	add.s32 	%r58, %r57, %r42;
	shl.b32 	%r59, %r58, 4;
	add.s32 	%r60, %r59, -1383041155;
	add.s32 	%r61, %r58, -626627285;
	xor.b32  	%r62, %r60, %r61;
	shr.u32 	%r63, %r58, 5;
	add.s32 	%r64, %r63, 2123724318;
	xor.b32  	%r65, %r62, %r64;
	add.s32 	%r66, %r65, %r50;
	shl.b32 	%r67, %r66, 4;
	add.s32 	%r68, %r67, -1556008596;
	add.s32 	%r69, %r66, 2027808484;
	xor.b32  	%r70, %r68, %r69;
	shr.u32 	%r71, %r66, 5;
	add.s32 	%r72, %r71, -939442524;
	xor.b32  	%r73, %r70, %r72;
	add.s32 	%r74, %r73, %r58;
	shl.b32 	%r75, %r74, 4;
	add.s32 	%r76, %r75, -1383041155;
	add.s32 	%r77, %r74, 2027808484;
	xor.b32  	%r78, %r76, %r77;
	shr.u32 	%r79, %r74, 5;
	add.s32 	%r80, %r79, 2123724318;
	xor.b32  	%r81, %r78, %r80;
	add.s32 	%r82, %r81, %r66;
	shl.b32 	%r83, %r82, 4;
	add.s32 	%r84, %r83, -1556008596;
	add.s32 	%r85, %r82, 387276957;
	xor.b32  	%r86, %r84, %r85;
	shr.u32 	%r87, %r82, 5;
	add.s32 	%r88, %r87, -939442524;
	xor.b32  	%r89, %r86, %r88;
	add.s32 	%r90, %r89, %r74;
	shl.b32 	%r91, %r90, 4;
	add.s32 	%r92, %r91, -1383041155;
	add.s32 	%r93, %r90, 387276957;
	xor.b32  	%r94, %r92, %r93;
	shr.u32 	%r95, %r90, 5;
	add.s32 	%r96, %r95, 2123724318;
	xor.b32  	%r97, %r94, %r96;
	add.s32 	%r98, %r97, %r82;
	shl.b32 	%r99, %r98, 4;
	add.s32 	%r100, %r99, -1556008596;
	add.s32 	%r101, %r98, -1253254570;
	xor.b32  	%r102, %r100, %r101;
	shr.u32 	%r103, %r98, 5;
	add.s32 	%r104, %r103, -939442524;
	xor.b32  	%r105, %r102, %r104;
	add.s32 	%r106, %r105, %r90;
	shl.b32 	%r107, %r106, 4;
	add.s32 	%r108, %r107, -1383041155;
	add.s32 	%r109, %r106, -1253254570;
	xor.b32  	%r110, %r108, %r109;
	shr.u32 	%r111, %r106, 5;
	add.s32 	%r112, %r111, 2123724318;
	xor.b32  	%r113, %r110, %r112;
	add.s32 	%r114, %r113, %r98;
	shl.b32 	%r115, %r114, 4;
	add.s32 	%r116, %r115, -1556008596;
	add.s32 	%r117, %r114, 1401181199;
	xor.b32  	%r118, %r116, %r117;
	shr.u32 	%r119, %r114, 5;
	add.s32 	%r120, %r119, -939442524;
	xor.b32  	%r121, %r118, %r120;
	add.s32 	%r122, %r121, %r106;
	shl.b32 	%r123, %r122, 4;
	add.s32 	%r124, %r123, -1383041155;
	add.s32 	%r125, %r122, 1401181199;
	xor.b32  	%r126, %r124, %r125;
	shr.u32 	%r127, %r122, 5;
	add.s32 	%r128, %r127, 2123724318;
	xor.b32  	%r129, %r126, %r128;
	add.s32 	%r130, %r129, %r114;
	shl.b32 	%r131, %r130, 4;
	add.s32 	%r132, %r131, -1556008596;
	add.s32 	%r133, %r130, -239350328;
	xor.b32  	%r134, %r132, %r133;
	shr.u32 	%r135, %r130, 5;
	add.s32 	%r136, %r135, -939442524;
	xor.b32  	%r137, %r134, %r136;
	add.s32 	%r138, %r137, %r122;
	shl.b32 	%r139, %r138, 4;
	add.s32 	%r140, %r139, -1383041155;
	add.s32 	%r141, %r138, -239350328;
	xor.b32  	%r142, %r140, %r141;
	shr.u32 	%r143, %r138, 5;
	add.s32 	%r144, %r143, 2123724318;
	xor.b32  	%r145, %r142, %r144;
	add.s32 	%r146, %r145, %r130;
	shl.b32 	%r147, %r146, 4;
	add.s32 	%r148, %r147, -1556008596;
	add.s32 	%r149, %r146, -1879881855;
	xor.b32  	%r150, %r148, %r149;
	shr.u32 	%r151, %r146, 5;
	add.s32 	%r152, %r151, -939442524;
	xor.b32  	%r153, %r150, %r152;
	add.s32 	%r154, %r153, %r138;
	shl.b32 	%r155, %r154, 4;
	add.s32 	%r156, %r155, -1383041155;
	add.s32 	%r157, %r154, -1879881855;
	xor.b32  	%r158, %r156, %r157;
	shr.u32 	%r159, %r154, 5;
	add.s32 	%r160, %r159, 2123724318;
	xor.b32  	%r161, %r158, %r160;
	add.s32 	%r162, %r161, %r146;
	shl.b32 	%r163, %r162, 4;
	add.s32 	%r164, %r163, -1556008596;
	add.s32 	%r165, %r162, 774553914;
	xor.b32  	%r166, %r164, %r165;
	shr.u32 	%r167, %r162, 5;
	add.s32 	%r168, %r167, -939442524;
	xor.b32  	%r169, %r166, %r168;
	add.s32 	%r170, %r169, %r154;
	shl.b32 	%r171, %r170, 4;
	add.s32 	%r172, %r171, -1383041155;
	add.s32 	%r173, %r170, 774553914;
	xor.b32  	%r174, %r172, %r173;
	shr.u32 	%r175, %r170, 5;
	add.s32 	%r176, %r175, 2123724318;
	xor.b32  	%r177, %r174, %r176;
	add.s32 	%r178, %r177, %r162;
	shl.b32 	%r179, %r178, 4;
	add.s32 	%r180, %r179, -1556008596;
	add.s32 	%r181, %r178, -865977613;
	xor.b32  	%r182, %r180, %r181;
	shr.u32 	%r183, %r178, 5;
	add.s32 	%r184, %r183, -939442524;
	xor.b32  	%r185, %r182, %r184;
	add.s32 	%r186, %r185, %r170;
	shl.b32 	%r187, %r186, 4;
	add.s32 	%r188, %r187, -1383041155;
	add.s32 	%r189, %r186, -865977613;
	xor.b32  	%r190, %r188, %r189;
	shr.u32 	%r191, %r186, 5;
	add.s32 	%r192, %r191, 2123724318;
	xor.b32  	%r193, %r190, %r192;
	add.s32 	%r194, %r193, %r178;
	shl.b32 	%r195, %r194, 4;
	add.s32 	%r196, %r195, -1556008596;
	add.s32 	%r197, %r194, 1788458156;
	xor.b32  	%r198, %r196, %r197;
	shr.u32 	%r199, %r194, 5;
	add.s32 	%r200, %r199, -939442524;
	xor.b32  	%r201, %r198, %r200;
	add.s32 	%r202, %r201, %r186;
	shl.b32 	%r203, %r202, 4;
	add.s32 	%r204, %r203, -1383041155;
	add.s32 	%r205, %r202, 1788458156;
	xor.b32  	%r206, %r204, %r205;
	shr.u32 	%r207, %r202, 5;
	add.s32 	%r208, %r207, 2123724318;
	xor.b32  	%r209, %r206, %r208;
	add.s32 	%r210, %r209, %r194;
	shl.b32 	%r211, %r210, 4;
	add.s32 	%r212, %r211, -1556008596;
	add.s32 	%r213, %r210, 147926629;
	xor.b32  	%r214, %r212, %r213;
	shr.u32 	%r215, %r210, 5;
	add.s32 	%r216, %r215, -939442524;
	xor.b32  	%r217, %r214, %r216;
	add.s32 	%r218, %r217, %r202;
	shl.b32 	%r219, %r218, 4;
	add.s32 	%r220, %r219, -1383041155;
	add.s32 	%r221, %r218, 147926629;
	xor.b32  	%r222, %r220, %r221;
	shr.u32 	%r223, %r218, 5;
	add.s32 	%r224, %r223, 2123724318;
	xor.b32  	%r225, %r222, %r224;
	add.s32 	%r226, %r225, %r210;
	shl.b32 	%r227, %r226, 4;
	add.s32 	%r228, %r227, -1556008596;
	add.s32 	%r229, %r226, -1492604898;
	xor.b32  	%r230, %r228, %r229;
	shr.u32 	%r231, %r226, 5;
	add.s32 	%r232, %r231, -939442524;
	xor.b32  	%r233, %r230, %r232;
	add.s32 	%r234, %r233, %r218;
	shl.b32 	%r235, %r234, 4;
	add.s32 	%r236, %r235, -1383041155;
	add.s32 	%r237, %r234, -1492604898;
	xor.b32  	%r238, %r236, %r237;
	shr.u32 	%r239, %r234, 5;
	add.s32 	%r240, %r239, 2123724318;
	xor.b32  	%r241, %r238, %r240;
	add.s32 	%r242, %r241, %r226;
	shl.b32 	%r243, %r242, 4;
	add.s32 	%r244, %r243, -1556008596;
	add.s32 	%r245, %r242, 1161830871;
	xor.b32  	%r246, %r244, %r245;
	shr.u32 	%r247, %r242, 5;
	add.s32 	%r248, %r247, -939442524;
	xor.b32  	%r249, %r246, %r248;
	add.s32 	%r250, %r249, %r234;
	shl.b32 	%r251, %r250, 4;
	add.s32 	%r252, %r251, -1383041155;
	add.s32 	%r253, %r250, 1161830871;
	xor.b32  	%r254, %r252, %r253;
	shr.u32 	%r255, %r250, 5;
	add.s32 	%r256, %r255, 2123724318;
	xor.b32  	%r257, %r254, %r256;
	add.s32 	%r258, %r257, %r242;
	shl.b32 	%r259, %r258, 4;
	add.s32 	%r260, %r259, -1556008596;
	add.s32 	%r261, %r258, -478700656;
	xor.b32  	%r262, %r260, %r261;
	shr.u32 	%r263, %r258, 5;
	add.s32 	%r264, %r263, -939442524;
	xor.b32  	%r265, %r262, %r264;
	add.s32 	%r297, %r265, %r250;
	mov.u32 	%r295, 4;
	mov.f32 	%f177, 0f00000000;
	mov.f32 	%f176, %f177;
	mov.f32 	%f175, %f177;

BB1_1:
	mov.u32 	%r3, %r297;
	mov.f32 	%f174, 0f00000000;
	and.b32  	%r266, %r295, 1;
	cvt.rn.f32.u32	%f63, %r266;
	mad.lo.s32 	%r267, %r3, 1664525, 1013904223;
	and.b32  	%r268, %r267, 16777215;
	cvt.rn.f32.u32	%f64, %r268;
	mul.f32 	%f65, %f64, 0f33800000;
	sub.f32 	%f66, %f63, %f65;
	shr.u32 	%r269, %r295, 1;
	cvt.rn.f32.u32	%f67, %r269;
	mad.lo.s32 	%r270, %r267, 1664525, 1013904223;
	and.b32  	%r271, %r270, 16777215;
	cvt.rn.f32.u32	%f68, %r271;
	mul.f32 	%f69, %f68, 0f33800000;
	sub.f32 	%f70, %f67, %f69;
	fma.rn.f32 	%f71, %f3, %f66, %f1;
	fma.rn.f32 	%f72, %f4, %f70, %f2;
	ld.global.v2.f32 	{%f73, %f74}, [eye];
	mov.f32 	%f179, %f74;
	mov.f32 	%f178, %f73;
	ld.global.f32 	%f180, [eye+8];
	ld.global.f32 	%f75, [u];
	ld.global.f32 	%f76, [u+4];
	ld.global.f32 	%f77, [u+8];
	ld.global.f32 	%f78, [v];
	mul.f32 	%f79, %f78, %f72;
	ld.global.f32 	%f80, [v+4];
	mul.f32 	%f81, %f80, %f72;
	ld.global.f32 	%f82, [v+8];
	mul.f32 	%f83, %f82, %f72;
	fma.rn.f32 	%f84, %f75, %f71, %f79;
	fma.rn.f32 	%f85, %f76, %f71, %f81;
	fma.rn.f32 	%f86, %f77, %f71, %f83;
	ld.global.f32 	%f87, [w];
	add.f32 	%f88, %f87, %f84;
	ld.global.f32 	%f89, [w+4];
	add.f32 	%f90, %f89, %f85;
	ld.global.f32 	%f91, [w+8];
	add.f32 	%f92, %f91, %f86;
	mul.f32 	%f93, %f90, %f90;
	fma.rn.f32 	%f94, %f88, %f88, %f93;
	fma.rn.f32 	%f95, %f92, %f92, %f94;
	sqrt.rn.f32 	%f96, %f95;
	rcp.rn.f32 	%f97, %f96;
	mul.f32 	%f181, %f97, %f88;
	mul.f32 	%f182, %f97, %f90;
	mul.f32 	%f183, %f97, %f92;
	add.u64 	%rd11, %SP, 0;
	cvta.to.local.u64 	%rd12, %rd11;
	st.local.v4.f32 	[%rd12+16], {%f174, %f174, %f174, %f174};
	st.local.v2.f32 	[%rd12+32], {%f174, %f174};
	mov.u32 	%r272, 0;
	st.local.u32 	[%rd12+40], %r272;
	st.local.v2.f32 	[%rd12+96], {%f174, %f174};
	st.local.u32 	[%rd12+104], %r272;
	st.local.u32 	[%rd12], %r272;
	st.local.u32 	[%rd12+52], %r270;
	mov.u32 	%r273, 1065353216;
	st.local.u32 	[%rd12+84], %r273;
	mov.f32 	%f99, 0f3F800000;
	st.local.v2.f32 	[%rd12+88], {%f99, %f99};
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd12+80], %rs1;
	bra.uni 	BB1_2;

BB1_14:
	add.s32 	%r290, %r5, 1;
	st.local.u32 	[%rd12], %r290;
	ld.local.v4.f32 	{%f151, %f152, %f153, %f154}, [%rd12+96];
	ld.local.v4.f32 	{%f158, %f159, %f160, %f161}, [%rd12+32];
	fma.rn.f32 	%f163, %f152, %f188, %f159;
	fma.rn.f32 	%f165, %f151, %f189, %f158;
	ld.local.v2.f32 	{%f166, %f167}, [%rd12+56];
	ld.local.v4.f32 	{%f168, %f169, %f170, %f171}, [%rd12+64];
	st.local.v2.f32 	[%rd12+32], {%f165, %f163};
	fma.rn.f32 	%f173, %f153, %f187, %f160;
	st.local.f32 	[%rd12+40], %f173;
	mov.f32 	%f179, %f167;
	mov.f32 	%f178, %f166;
	mov.f32 	%f180, %f168;
	mov.f32 	%f183, %f171;
	mov.f32 	%f182, %f170;
	mov.f32 	%f181, %f169;

BB1_2:
	mov.f32 	%f19, %f183;
	mov.f32 	%f18, %f182;
	mov.f32 	%f17, %f181;
	mov.f32 	%f16, %f180;
	mov.f32 	%f15, %f179;
	mov.f32 	%f14, %f178;
	ld.global.u32 	%r274, [top_Object];
	mov.f32 	%f106, 0f38D1B717;
	mov.f32 	%f107, 0f6C4ECB8F;
	mov.u32 	%r276, 112;
	// inline asm
	call _rt_trace_64, (%r274, %f14, %f15, %f16, %f17, %f18, %f19, %r272, %f106, %f107, %rd11, %r276);
	// inline asm
	ld.local.u64 	%rd15, [%rd12+80];
	cvt.u16.u64	%rs2, %rd15;
	and.b16  	%rs3, %rs2, 255;
	setp.eq.s16	%p1, %rs3, 0;
	shr.u64 	%rd16, %rd15, 32;
	cvt.u32.u64	%r277, %rd16;
	mov.b32 	 %f189, %r277;
	@%p1 bra 	BB1_4;
	bra.uni 	BB1_3;

BB1_4:
	ld.local.u32 	%r5, [%rd12];
	setp.gt.s32	%p2, %r5, 1;
	ld.local.f32 	%f188, [%rd12+88];
	@%p2 bra 	BB1_6;
	bra.uni 	BB1_5;

BB1_6:
	max.f32 	%f126, %f189, %f188;
	ld.local.f32 	%f26, [%rd12+92];
	max.f32 	%f27, %f126, %f26;
	ld.local.u32 	%r278, [%rd12+52];
	mad.lo.s32 	%r298, %r278, 1664525, 1013904223;
	st.local.u32 	[%rd12+52], %r298;
	and.b32  	%r279, %r298, 16777215;
	cvt.rn.f32.u32	%f127, %r279;
	mul.f32 	%f128, %f127, 0f33800000;
	setp.ltu.f32	%p3, %f128, %f27;
	@%p3 bra 	BB1_13;
	bra.uni 	BB1_7;

BB1_13:
	rcp.rn.f32 	%f150, %f27;
	mul.f32 	%f189, %f150, %f189;
	st.local.f32 	[%rd12+84], %f189;
	mul.f32 	%f188, %f150, %f188;
	st.local.f32 	[%rd12+88], %f188;
	mul.f32 	%f187, %f150, %f26;
	st.local.f32 	[%rd12+92], %f187;
	bra.uni 	BB1_14;

BB1_5:
	ld.local.f32 	%f187, [%rd12+92];
	bra.uni 	BB1_14;

BB1_3:
	ld.local.v2.f32 	{%f108, %f109}, [%rd12+88];
	ld.local.v4.f32 	{%f112, %f113, %f114, %f115}, [%rd12+96];
	ld.local.v4.f32 	{%f119, %f120, %f121, %f122}, [%rd12+32];
	fma.rn.f32 	%f186, %f112, %f189, %f119;
	fma.rn.f32 	%f185, %f113, %f108, %f120;
	ld.local.u32 	%r298, [%rd12+52];
	st.local.v2.f32 	[%rd12+32], {%f186, %f185};
	fma.rn.f32 	%f184, %f114, %f109, %f121;
	st.local.f32 	[%rd12+40], %f184;
	bra.uni 	BB1_8;

BB1_7:
	ld.local.v4.f32 	{%f129, %f130, %f131, %f132}, [%rd12+32];
	mov.f32 	%f186, %f129;
	mov.f32 	%f185, %f130;
	mov.f32 	%f184, %f131;

BB1_8:
	mov.u32 	%r297, %r298;
	add.f32 	%f175, %f175, %f186;
	add.f32 	%f176, %f176, %f185;
	add.f32 	%f177, %f177, %f184;
	add.s32 	%r295, %r295, -1;
	setp.ne.s32	%p4, %r295, 0;
	@%p4 bra 	BB1_1;

	mul.f32 	%f37, %f175, 0f3E800000;
	mul.f32 	%f38, %f176, 0f3E800000;
	mul.f32 	%f39, %f177, 0f3E800000;
	ld.global.u32 	%r9, [frame_number];
	setp.gt.u32	%p5, %r9, 1;
	@%p5 bra 	BB1_11;
	bra.uni 	BB1_10;

BB1_11:
	mov.u32 	%r294, 2;
	cvt.rn.f32.u32	%f133, %r9;
	rcp.rn.f32 	%f134, %f133;
	add.f32 	%f135, %f133, 0fBF800000;
	mul.f32 	%f136, %f134, %f135;
	ld.global.u32 	%rd36, [launch_index];
	ld.global.u32 	%rd37, [launch_index+4];
	mov.u64 	%rd46, hdr_buffer;
	cvta.global.u64 	%rd35, %rd46;
	mov.u32 	%r285, 12;
	mov.u64 	%rd45, 0;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd35, %r294, %r285, %rd36, %rd37, %rd45, %rd45);
	// inline asm
	ld.global.u32 	%rd42, [launch_index];
	ld.global.u32 	%rd43, [launch_index+4];
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd35, %r294, %r285, %rd42, %rd43, %rd45, %rd45);
	// inline asm
	ld.f32 	%f137, [%rd40];
	mul.f32 	%f138, %f136, %f137;
	ld.f32 	%f139, [%rd40+4];
	mul.f32 	%f140, %f136, %f139;
	ld.f32 	%f141, [%rd40+8];
	mul.f32 	%f142, %f136, %f141;
	fma.rn.f32 	%f143, %f37, %f134, %f138;
	fma.rn.f32 	%f144, %f38, %f134, %f140;
	fma.rn.f32 	%f145, %f39, %f134, %f142;
	st.f32 	[%rd34+8], %f145;
	st.f32 	[%rd34+4], %f144;
	st.f32 	[%rd34], %f143;
	bra.uni 	BB1_12;

BB1_10:
	mov.u32 	%r292, 2;
	ld.global.u32 	%rd29, [launch_index];
	ld.global.u32 	%rd30, [launch_index+4];
	mov.u64 	%rd33, hdr_buffer;
	cvta.global.u64 	%rd28, %rd33;
	mov.u32 	%r281, 12;
	mov.u64 	%rd32, 0;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r292, %r281, %rd29, %rd30, %rd32, %rd32);
	// inline asm
	st.f32 	[%rd27+8], %f39;
	st.f32 	[%rd27+4], %f38;
	st.f32 	[%rd27], %f37;

BB1_12:
	mov.u32 	%r293, 2;
	mov.u32 	%r291, 16;
	mov.u64 	%rd66, output_buffer;
	cvta.global.u64 	%rd65, %rd66;
	ld.global.u32 	%rd49, [launch_index];
	ld.global.u32 	%rd50, [launch_index+4];
	mov.u64 	%rd58, 0;
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd65, %r293, %r291, %rd49, %rd50, %rd58, %rd58);
	// inline asm
	ld.global.u32 	%rd55, [launch_index];
	ld.global.u32 	%rd56, [launch_index+4];
	mov.u64 	%rd60, hdr_buffer;
	cvta.global.u64 	%rd54, %rd60;
	mov.u32 	%r289, 12;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd54, %r293, %r289, %rd55, %rd56, %rd58, %rd58);
	// inline asm
	ld.f32 	%f146, [%rd53+8];
	ld.f32 	%f147, [%rd53+4];
	ld.f32 	%f148, [%rd53];
	st.v4.f32 	[%rd47], {%f148, %f147, %f146, %f99};
	ret;
}

	// .globl	_Z10backGroundv
.visible .entry _Z10backGroundv(

)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<71>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<6>;


	mov.u64 	%rd1, ray;
	add.s64 	%rd2, %rd1, 12;
	ldu.global.f32 	%f1, [%rd2];
	add.s64 	%rd3, %rd1, 16;
	ldu.global.f32 	%f9, [%rd3];
	abs.f32 	%f10, %f9;
	mov.f32 	%f11, 0f3F800000;
	sub.f32 	%f12, %f11, %f10;
	mul.f32 	%f13, %f12, 0f3F000000;
	sqrt.rn.f32 	%f14, %f13;
	setp.gt.f32	%p1, %f10, 0f3F11EB85;
	selp.f32	%f15, %f14, %f10, %p1;
	mul.f32 	%f16, %f15, %f15;
	mov.f32 	%f17, 0f3C94D2E9;
	mov.f32 	%f18, 0f3D53F941;
	fma.rn.f32 	%f19, %f18, %f16, %f17;
	mov.f32 	%f20, 0f3D3F841F;
	fma.rn.f32 	%f21, %f19, %f16, %f20;
	mov.f32 	%f22, 0f3D994929;
	fma.rn.f32 	%f23, %f21, %f16, %f22;
	mov.f32 	%f24, 0f3E2AAB94;
	fma.rn.f32 	%f25, %f23, %f16, %f24;
	mul.f32 	%f26, %f16, %f25;
	fma.rn.f32 	%f27, %f26, %f15, %f15;
	add.f32 	%f28, %f27, %f27;
	mov.f32 	%f29, 0f3FC90FDB;
	sub.f32 	%f30, %f29, %f27;
	selp.f32	%f31, %f28, %f30, %p1;
	setp.lt.f32	%p2, %f9, 0f00000000;
	mov.f32 	%f32, 0f40490FDB;
	sub.f32 	%f33, %f32, %f31;
	selp.f32	%f2, %f33, %f31, %p2;
	add.s64 	%rd4, %rd1, 20;
	ldu.global.f32 	%f34, [%rd4];
	abs.f32 	%f3, %f34;
	abs.f32 	%f4, %f1;
	setp.eq.f32	%p3, %f3, 0f00000000;
	setp.eq.f32	%p4, %f4, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	mov.b32 	 %r1, %f34;
	mov.b32 	 %r3, %f1;
	and.b32  	%r2, %r3, -2147483648;
	@%p5 bra 	BB2_4;
	bra.uni 	BB2_1;

BB2_4:
	shr.s32 	%r10, %r1, 31;
	and.b32  	%r11, %r10, 1078530011;
	or.b32  	%r12, %r11, %r2;
	mov.b32 	 %f70, %r12;
	bra.uni 	BB2_5;

BB2_1:
	setp.eq.f32	%p6, %f3, 0f7F800000;
	setp.eq.f32	%p7, %f4, 0f7F800000;
	and.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB2_3;
	bra.uni 	BB2_2;

BB2_3:
	shr.s32 	%r6, %r1, 31;
	and.b32  	%r7, %r6, 13483017;
	add.s32 	%r8, %r7, 1061752795;
	or.b32  	%r9, %r8, %r2;
	mov.b32 	 %f70, %r9;
	bra.uni 	BB2_5;

BB2_2:
	max.f32 	%f35, %f4, %f3;
	min.f32 	%f36, %f4, %f3;
	div.rn.f32 	%f37, %f36, %f35;
	mul.rn.f32 	%f38, %f37, %f37;
	mov.f32 	%f39, 0fC0B59883;
	mov.f32 	%f40, 0fBF52C7EA;
	fma.rn.f32 	%f41, %f38, %f40, %f39;
	mov.f32 	%f42, 0fC0D21907;
	fma.rn.f32 	%f43, %f41, %f38, %f42;
	mul.f32 	%f44, %f38, %f43;
	mul.f32 	%f45, %f37, %f44;
	add.f32 	%f46, %f38, 0f41355DC0;
	mov.f32 	%f47, 0f41E6BD60;
	fma.rn.f32 	%f48, %f46, %f38, %f47;
	mov.f32 	%f49, 0f419D92C8;
	fma.rn.f32 	%f50, %f48, %f38, %f49;
	rcp.rn.f32 	%f51, %f50;
	fma.rn.f32 	%f52, %f45, %f51, %f37;
	sub.f32 	%f54, %f29, %f52;
	setp.gt.f32	%p9, %f4, %f3;
	selp.f32	%f55, %f54, %f52, %p9;
	sub.f32 	%f57, %f32, %f55;
	setp.lt.s32	%p10, %r1, 0;
	selp.f32	%f58, %f57, %f55, %p10;
	mov.b32 	 %r4, %f58;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	 %f59, %r5;
	add.f32 	%f60, %f3, %f4;
	setp.gtu.f32	%p11, %f60, 0f7F800000;
	selp.f32	%f70, %f60, %f59, %p11;

BB2_5:
	add.f32 	%f61, %f70, 0f40C90FDB;
	setp.gt.f32	%p12, %f1, 0f00000000;
	selp.f32	%f62, %f70, %f61, %p12;
	div.rn.f32 	%f63, %f62, 0f40490FDB;
	mul.f32 	%f64, %f63, 0f3F000000;
	div.rn.f32 	%f65, %f2, 0f40490FDB;
	tex.2d.v4.f32.f32	{%f66, %f67, %f68, %f69}, [envmap, {%f64, %f65}];
	st.global.v2.f32 	[prd_radiance+96], {%f66, %f67};
	st.global.f32 	[prd_radiance+104], %f68;
	mov.u16 	%rs1, 1;
	st.global.u8 	[prd_radiance+80], %rs1;
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.reg .f32 	%f<3>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<8>;


	ld.global.u32 	%rd3, [launch_index];
	ld.global.u32 	%rd4, [launch_index+4];
	mov.u64 	%rd7, output_buffer;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r1, 2;
	mov.u32 	%r2, 16;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd4, %rd6, %rd6);
	// inline asm
	mov.f32 	%f1, 0f00000000;
	mov.f32 	%f2, 0f3F800000;
	st.v4.f32 	[%rd1], {%f2, %f2, %f1, %f2};
	ret;
}


